@charset "utf-8";

// @include clearfix;
@mixin clearfix {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

/* ============================================ */

// object-fit
// @include object-fit;
@mixin object-fit($fit: cover, $position: null) {
  object-fit: $fit;
  @if $position {
    object-position: $position;
    font-family: "object-fit: #{$fit}; object-position: #{$position}";
  } @else {
    font-family: "object-fit: #{$fit};";
  }
}

/* ============================================ */

// visually-hidden:
// 視覚的にコンテンツを非表示にしたい場合や、スクリーンリーダーや
// 検索エンジンからアクセスできるようにしたい場合に使う
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  border: 0;
}

/* ============================================ */

// .using{
//   @include lhCrop(80/40) ;
//   font-size: 40px;
//   line-height: (80/40);
// }

// 見出し line-height詰め
// @include lhCrop(line-height/fontsize);
@mixin lhCrop($line-height) {
  &::before {
    display: block;
    width: 0;
    height: 0;
    margin-top: calc((1 - #{$line-height}) * 0.5em);
    content: "";
  }
}

/* ============================================ */

// .using{
//   @include widtnPercent(400, 1280);
//   background:#eee;
// }

// 横幅 px → % 変換
// @include widtnPercent(子要素, 親要素);
@mixin widtnPercent($pxWidth, $parentPxWidth) {
  width: floor((($pxWidth / $parentPxWidth) * 10000%) / 100);
}

/* ============================================ */

// .using {
//   @include fzPercentSP(px);
//   @include desktop {
//     @include fzPercentSP(px);
//   }
// }

// font-size可変 SP
// @include fzPercentSP(px);
@mixin fzPercentSP($pxWidth) {
  font-size: (($pxWidth / 320 /*SPデザイン横幅*/) * 10000vw) / 100;
}

// font-size可変 PC
// @include fzPercentPC(px);
@mixin fzPercentPC($pxWidth) {
  font-size: (($pxWidth / 1200 /*PCデザイン横幅*/) * 10000vw) / 100;
}

/* ============================================ */

// ハック

// Mozilla Firefox
// @include onlyFirefox{}
@mixin onlyFirefox {
  @supports (-moz-appearance: meterbar) {
    @content;
  }
}

// Safari
// @include onlySafari{}
@mixin onlySafari {
  @supports (overflow: -webkit-marquee) and (justify-content: inherit) {
    @content;
  }
}

// iOS Safari
// @include onlyIOS{}
@mixin onlyIOS {
  @supports (-webkit-text-size-adjust: none) and (not (-ms-accelerator: true)) and (not (-moz-appearance: none)) {
    @content;
  }
}

// Microsoft Edge
// @include onlyEdge{}
@mixin onlyEdge {
  @supports (-ms-ime-align: auto) {
    @content;
  }
}

// Internet Explorer
// @include onlyIE{}
@mixin onlyIE {
  /* stylelint-disable-next-line selector-type-no-unknown */
  _:-ms-input-placeholder,
  :root & {
    @content;
  }
}

// @supportsを用いたIEハック
// .using {
//   IE用の記述
//   @supports (appearance: none) {
//     IE以外用の記述
//   }
// }
// @include notIE{}
@mixin notIE {
  @supports (appearance: none) {
    @content;
  }
}
